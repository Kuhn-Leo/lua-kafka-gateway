#user  nobody;
worker_processes  2;
error_log  logs/error.log  warn;
error_log  logs/error.log  notice;

events {
    #use epoll;
    accept_mutex off;
    #worker_connections 65535;
}

worker_rlimit_nofile 65535;

http {
    server_tokens  off;
    default_type  application/json;
    client_body_timeout    60s;
    client_header_timeout  60s;
    send_timeout           10s;
    keepalive_timeout      30s;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log    main;
    client_max_body_size            32k;
    client_body_buffer_size         32k;
    client_header_buffer_size       16k;
    large_client_header_buffers     4       8k;

    gzip on;
    gzip_comp_level 6;
    gzip_types application/json text/plain text/xml text/css application/javascript;

    lua_package_path   "$prefix/resty_modules/lualib/?.lua;$prefix/lib/?.lua;;";
    lua_package_cpath  "$prefix/resty_modules/lualib/?.so;;";
    lua_code_cache on;

    init_by_lua_file  lib/kafka/gateway/init.lua;
    lua_max_pending_timers 25000;
    lua_max_running_timers 23000;

    server {
        listen       8080;

        #include mime.types;
        charset utf-8;

        access_log  off;

        location /sms {
            log_escape_non_ascii off; #禁止acii码进行转义
            access_by_lua_file lib/kafka/gateway/req/filters/sms.lua;
            log_by_lua_file lib/kafka/gateway/send.lua;
            content_by_lua_file lib/kafka/gateway/res/content.lua;
            header_filter_by_lua_file lib/kafka/gateway/res/header.lua;
        }

        location /email {
            log_escape_non_ascii off; #禁止acii码进行转义
            access_by_lua_file lib/kafka/gateway/req/filters/email.lua;
            log_by_lua_file lib/kafka/gateway/send.lua;
            content_by_lua_file lib/kafka/gateway/res/content.lua;
            header_filter_by_lua_file lib/kafka/gateway/res/header.lua;
        }

        location /wechat {
            log_escape_non_ascii off; #禁止acii码进行转义
            access_by_lua_file lib/kafka/gateway/req/filters/wechat.lua;
            log_by_lua_file lib/kafka/gateway/send.lua;
            content_by_lua_file lib/kafka/gateway/res/content.lua;
            header_filter_by_lua_file lib/kafka/gateway/res/header.lua;
        }

        location = /favicon.ico { 
            internal;
            access_log off; 
            log_not_found off; 
            empty_gif;
        }
    }
}